########################
# Device Setup
########################

substitutions:
  device_id: pixel-matrix-1
  device_name: Pixel Matrix 1

esphome:
  name: "${device_id}"
  friendly_name: "${device_name}"
  platformio_options:
    board_build.flash_mode: dio
  libraries:
    - "Wire"
    - "SPI"
    - "SensorLib@0.2.1"  # Some change after v0.2.1 makes compiling fail

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

########################
# Software Stack Setup
########################

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""

ota:
  - platform: esphome
    password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_name} Hotspot
    password: !secret wifi_fallback_password

captive_portal:

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"

########################
# Hardware Setup
########################

external_components:
  source:
    type: git
    url: https://github.com/dala318/esphome-qmi8658
    ref: main

i2c:
  sda: GPIO11
  scl: GPIO12

sensor:

  # Extra sensor to keep track of plug uptime
  - platform: uptime
    name: "Uptime"
    filters:
      - lambda: return x / 3600;
    unit_of_measurement: "h"
    accuracy_decimals: 2

  # Extra sensor for WiFi signal
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s

  - platform: qmi8658
    address: 0x6B
    interrupt_pin_1: GPIO10
    acceleration_x:
      name: "Acceleration X"
    acceleration_y:
      name: "Acceleration Y"
    acceleration_z:
      name: "Acceleration Z"
    gyroscope_x:
      name: "Gyro X"
    gyroscope_y:
      name: "Gyro Y"
    gyroscope_z:
      name: "Gyro Z"
    temperature:
      name: "Temperature"
      filters:
        - offset: 34.0
    update_interval: 5s

light:
  - platform: neopixelbus
    name: "Pixel Matrix"
    id: pixel_matrix
    type: RGB
    variant: WS2811
    pin: GPIO14
    num_leds: 64
    color_correct: [40%, 40%, 40%]
    effects:
      - addressable_rainbow:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_color_wipe:
      - addressable_fireworks:
      - addressable_flicker:

display:
  - platform: addressable_light
    id: pixel_display
    addressable_light_id: pixel_matrix
    width: 8
    height: 8
    pixel_mapper: |-
      if (x % 2 == 0) {
        return (x * 8) + y;
      }
      return (x * 8) + (7 - y);
    rotation: 180Â°
    update_interval: 1000ms
    auto_clear_enabled: true
    lambda: |-
          Color red = Color(0x5F0000);
          Color green = Color(0x005F00);
          Color blue = Color(0x00005F);
          it.rectangle(0, 0, 8, 8, red);
          it.rectangle(1, 1, 6, 6, green);
          it.rectangle(2, 2, 4, 4, blue);
          it.rectangle(3, 3, 2, 2, red);
